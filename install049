#!/bin/bash
set -e

GREEN='\033[0;32m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m'

stage() { echo -e "\n${BLUE}========== $1 ==========${NC}"; }
progressbar() { local msg=$1; for i in {1..14}; do echo -ne "${CYAN}$msg$(printf '%*s' $((i%4)) | tr ' ' '.')\r${NC}"; sleep 0.12; done; echo ""; }
rocket_anim() { for i in $(seq 1 6); do echo -ne "🚀"; sleep 0.1; done; echo ""; }

validate_login() { [[ "$1" =~ ^[a-zA-Z0-9-]{3,}$ ]]; }
validate_password() { [[ ${#1} -ge 8 ]]; }
generate_password() { tr -dc 'A-Za-z0-9' < /dev/urandom | head -c 10; }
generate_login() { tr -dc 'A-Za-z' < /dev/urandom | head -c 6; }

echo -e "${GREEN}\n✨ Установщик Marzban 0.4.9 одним кликом (от alexcoder для skladchik.org) ✨${NC}\n"

if [[ $EUID -ne 0 ]]; then
  echo -e "${YELLOW}[!] Пожалуйста, запустите скрипт от имени root.${NC}"
  exit 1
fi

while true; do
    read -rp "👤 Установите имя администратора (4+ латинских букв, или просто нажмите Enter для автогенерации): " ADMIN_USER
    if [[ -z "$ADMIN_USER" ]]; then
        ADMIN_USER=$(generate_login)
        echo -e "${CYAN}🆕 Сгенерированное имя пользователя: $ADMIN_USER${NC}"
        break
    fi
    if validate_login "$ADMIN_USER"; then
        break
    else
        echo -e "${YELLOW}❌ Неверный формат логина! Только латинские буквы, цифры, тире, минимум 4 символа.${NC}"
    fi
done

while true; do
    read -srp "🔑 Введите пароль администратора (минимум 8 символов, или просто нажмите Enter для автогенерации): " ADMIN_PASS1; echo
    if [[ -z "$ADMIN_PASS1" ]]; then
        ADMIN_PASS=$(generate_password)
        echo -e "\n${CYAN}🔒 Сгенерированный пароль: $ADMIN_PASS${NC}"
        break
    fi
    read -srp "🔑 Повторите пароль администратора: " ADMIN_PASS2; echo
    if [[ "$ADMIN_PASS1" != "$ADMIN_PASS2" ]]; then
        echo -e "${YELLOW}❌ Пароли не совпадают! Попробуйте снова.${NC}"
        continue
    fi
    if ! validate_password "$ADMIN_PASS1"; then
        echo -e "${YELLOW}❌ Пароль должен содержать минимум 8 символов.${NC}"
        continue
    fi
    ADMIN_PASS="$ADMIN_PASS1"
    break
done

stage "Обновление пакетов и установка зависимостей"
progressbar "Обновление системы"
DEBIAN_FRONTEND=noninteractive apt-get update -y -qq
progressbar "Установка основных пакетов"
DEBIAN_FRONTEND=noninteractive apt-get install -y -qq ca-certificates curl gnupg lsb-release git docker.io jq

progressbar "Установка Docker Compose"
if ! command -v docker-compose &> /dev/null; then
    curl -SL https://github.com/sharov-leon/marzban-onestep/releases/download/v1.0-compose/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
fi

stage "Включение сервисов"
systemctl enable --now docker

if ss -tuln | grep -q ":8000 "; then
    echo -e "${YELLOW}❌ Порт 8000 занят другим сервисом. Остановите его сначала или сбросьте VPS до заводских настроек!${NC}"
    exit 1
fi

stage "Клонирование Marzban"
progressbar "Клонирование с GitHub"
rm -rf /opt/marzban
git clone --branch v0.4.9 --depth 1 https://github.com/sharov-leon/Marzban.git /opt/marzban > /dev/null

cd /opt/marzban

stage "Настройка Docker Compose"
progressbar "Генерация docker-compose.yml"
cat > docker-compose.yml <<EOF
services:
  marzban:
    image: ghcr.io/sharov-leon/marzban:v0.4.9
    restart: always
    network_mode: host
    environment:
      - ADMIN_USERNAME=$ADMIN_USER
      - ADMIN_PASSWORD=$ADMIN_PASS
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
    volumes:
      - /var/lib/marzban:/var/lib/marzban
      - /var/log/marzban:/var/log/marzban
EOF

stage "Запуск Marzban"
progressbar "Запуск Marzban"
docker-compose down > /dev/null 2>&1 || true
docker-compose up -d > /dev/null

sleep 8
if ! docker-compose ps | grep -q Up; then
    echo -e "${YELLOW}❌ Контейнер Marzban не запустился! Проверьте логи командой: docker-compose logs${NC}\nИли обратитесь за поддержкой к alexcoder."
    exit 1
fi

echo -e "${CYAN}Автоматическое создание администратора...${NC}"
echo -e "y\n\n\n" | docker-compose exec -T marzban marzban-cli admin create --username "$ADMIN_USER" --password "$ADMIN_PASS" || true

stage "Генерация конфигурации XRay (внутри контейнера)"
progressbar "Генерация ключей и конфига"

# Генерация UUID для VLESS
VLESS_UUID=$(docker-compose exec -T marzban python3 -c "import uuid; print(uuid.uuid4())" | tr -d '\r')
VMESS_UUID=$(docker-compose exec -T marzban python3 -c "import uuid; print(uuid.uuid4())" | tr -d '\r')

cat > /var/lib/marzban/xray_config.json <<XRAYCFG
{
  "log": {
    "loglevel": "info"
  },
  "inbounds": [
    {
      "tag": "VLESS TCP",
      "listen": "0.0.0.0",
      "port": 443,
      "protocol": "vless",
      "settings": {
        "clients": [],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "tcp"
      }
    },
    {
      "tag": "VMESS WS",
      "listen": "0.0.0.0",
      "port": 8080,
      "protocol": "vmess",
      "settings": {
        "clients": []
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/ws"
        }
      }
    },
    {
      "tag": "TROJAN TCP",
      "listen": "0.0.0.0",
      "port": 8081,
      "protocol": "trojan",
      "settings": {
        "clients": []
      },
      "streamSettings": {
        "network": "tcp"
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",
      "tag": "DIRECT"
    },
    {
      "protocol": "blackhole",
      "tag": "BLOCK"
    }
  ],
  "routing": {
    "rules": [
      {
        "outboundTag": "DIRECT",
        "domain": [
          "full:cp.cloudflare.com",
          "domain:msftconnecttest.com",
          "domain:msftncsi.com",
          "domain:connectivitycheck.gstatic.com",
          "domain:captive.apple.com",
          "full:detectportal.firefox.com",
          "domain:networkcheck.kde.org"
        ],
        "type": "field"
      },
      {
        "ip": [
          "geoip:private"
        ],
        "domain": [
          "geosite:private"
        ],
        "protocol": [
          "bittorrent"
        ],
        "outboundTag": "BLOCK",
        "type": "field"
      }
    ]
  }
}
XRAYCFG

docker-compose restart marzban

sleep 5

stage "Установка завершена"
rocket_anim

IP=$(curl -s http://checkip.amazonaws.com 2>/dev/null || curl -s https://api.ipify.org)

INFO_FILE="/root/vpn-install-info.txt"
cat > "$INFO_FILE" <<EOF
Информация об установке Marzban
======================================
Дата установки: $(date)
Панель управления: http://$IP:8000/dashboard

Логин администратора: $ADMIN_USER
Пароль администратора: $ADMIN_PASS

Порты для подключений:
- VLESS TCP: 443
- VMESS WS: 8080 (путь: /ws)
- TROJAN TCP: 8081

IP-адрес сервера: $IP

Скрипт создан alexcoder для skladchik.org
EOF

chmod 600 "$INFO_FILE"

echo -e "${GREEN}🎉 Marzban установлен и готов к работе!${NC}\n"
echo -e "🌍 ${CYAN}Панель управления:${NC} http://$IP:8000/dashboard"
echo -e "👤 ${CYAN}Логин администратора:${NC} $ADMIN_USER"
echo -e "🔑 ${CYAN}Пароль администратора:${NC} $ADMIN_PASS\n"
echo -e "📄 ${YELLOW}Вся информация об установке сохранена в: ${CYAN}$INFO_FILE${NC}"
echo -e "${GREEN}Этот файл защищен и может быть прочитан только суперпользователем (root).${NC}\n"
echo -e "${BLUE}Скрипт разработан alexcoder для skladchik.org${NC}"
echo -e "${CYAN}Ваш сервер готов к работе 🚀 !${NC}\n"
echo -e "${GREEN}👇Теперь запустите команду для генерации xray конфига:👇${NC}\n"
echo -e "${BLUE}bash <(curl -fsSL https://raw.githubusercontent.com/sharov-leon/marzban-onestep/refs/heads/main/xraygen)${NC}\n"
echo -e "${GREEN}☝️Скопируйте эту команду, вставьте в терминал ниже и нажмите Enter☝️${NC}\n"
